.remify(@var, @px) {
  @val: @px / (@px * 0 + 1);
  @rem: (@val / 16) * 1rem;
  @{var}: @rem;
}

.border-width(@top, @right, @bottom, @left) {
  border-width: (((@top / (@top * 0 + 1)) / 16) * 1rem) (((@right / (@right * 0 + 1)) / 16) * 1rem) (((@bottom / (@bottom * 0 + 1)) / 16) * 1rem) (((@left / (@left * 0 + 1)) / 16) * 1rem);
}

@pkg: tip;
@bgColor: #555;
@txtColor: #FFF;
@borderRadius: 5px;
@padding: 10px;
@animDuration: .5s;
@fontSize: 14px;
@width: 150px;
@smWidth: 75px;
@lgWidth: 300px;
@pointerWidth: 5px;
@pointerLength: 10px;
@tipMargin: 5px;


[data-tip] {
  position: relative;
  &:before,
  &:after {
    box-sizing: border-box;
    transition: all @animDuration ease 0s;
    position: absolute;
    opacity: 0;
    visibility: hidden;
    z-index: 1;
    left: 50%;
    transform: translateY((((@tipMargin / (@tipMargin * 0 + 1)) / 16) * 1rem));
  }
  &:before {
    .remify(font-size, @fontSize);
    content: attr(data-tip-content);
    background: @bgColor;
    color: @txtColor;
    display: table-cell;
    vertical-align: middle;
    text-align: center;
    .remify(border-radius, @borderRadius);
    .remify(padding, @padding);
  }
  &:after {
    content: "";
    border-style: solid;
    border-color: transparent;
    .remify(margin-left, -(@pointerWidth));
  }
  &:hover,
  &.@{pkg}--visible {
    &.@{pkg}--bottom {
      &:before,
      &:after {
        transform: translateY((((@tipMargin / (@tipMargin * 0 + 1)) / 16) * 1rem));
      }
    }
    &:before,
    &:after {
      visibility: visible;
      opacity: 1;
      transform: translateY((((-@tipMargin / (-@tipMargin * 0 + 1)) / 16) * 1rem));
    }
  }
  &.@{pkg}--top {
    &:before {
      bottom: 100%;
      .remify(margin-bottom, @pointerLength);
    }
    &:after {
      .border-width(@pointerLength, @pointerWidth, 0, @pointerWidth);
      bottom: 100%;
      border-top-color: @bgColor;
    }
  }
  &.@{pkg}--bottom {
    &:before {
      .remify(margin-top, @pointerLength);
    }
    &:after {
      .border-width(0, @pointerWidth, @pointerLength, @pointerWidth);
      border-bottom-color: @bgColor;
    }
    &:before,
    &:after {
      top: 100%;
      transform: translateY((((-@tipMargin / (-@tipMargin * 0 + 1)) / 16) * 1rem));
    }
    &.@{pkg}--right {
      &:after {
        .border-width(0, @pointerWidth, @pointerLength, 0);
      }
    }
    &.@{pkg}--left {
      &:after {
        .border-width(0, 0, @pointerLength, @pointerWidth);
      }
    }
  }
  &:before {
    .remify(width, @width);
    .remify(margin-left, @width / -2);
  }
  &.@{pkg}--small {
    &:before {
      .remify(width, @smWidth);
      .remify(margin-left, @smWidth / -2);
    }
  }
  &.@{pkg}--large {
    &:before {
      .remify(width, @lgWidth);
      .remify(margin-left, @lgWidth / -2);
    }
  }
  &.@{pkg}--right {
    &:before {
      left: 100%;
      .remify(margin-left, -(@pointerWidth + @padding));
    }
    &:after {
      left: 100%;
      .remify(margin-left, -(@pointerWidth));
      .border-width(@pointerLength, @pointerWidth, 0, 0);
    }
  }
  &.@{pkg}--left {
    &:before {
      .remify(left, -(@width));
      .remify(margin-left, @pointerWidth + @padding);
    }
    &:after {
      left: 0;
      margin-left: 0;
      .border-width(@pointerLength, 0, 0, @pointerWidth);
    }
    &.@{pkg}--small {
      &:before {
        .remify(left, -@smWidth);
      }
    }
    &.@{pkg}--large {
      &:before {
        .remify(left, -@lgWidth);
      }
    }
  }
}
